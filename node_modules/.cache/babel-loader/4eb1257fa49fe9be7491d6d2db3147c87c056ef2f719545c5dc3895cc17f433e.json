{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://127.0.0.1:5454';\nexport const getEvents = async () => {\n  const response = await axios.get(`${API_BASE_URL}/events`);\n  return response.data;\n};\nexport const createEvent = async description => {\n  const response = await axios.post(`${API_BASE_URL}/events`, {\n    description\n  });\n  return response.data;\n};\nexport const placeBet = async (eventId, choice, amount) => {\n  const response = await axios.post(`${API_BASE_URL}/bet`, {\n    event_id: eventId,\n    choice,\n    amount\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","getEvents","response","get","data","createEvent","description","post","placeBet","eventId","choice","amount","event_id"],"sources":["/home/tec502/pblredes3/src/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://127.0.0.1:5454';\n\nexport const getEvents = async () => {\n  const response = await axios.get(`${API_BASE_URL}/events`);\n  return response.data;\n};\n\nexport const createEvent = async (description: string) => {\n  const response = await axios.post(`${API_BASE_URL}/events`, { description });\n  return response.data;\n};\n\nexport const placeBet = async (eventId: number, choice: string, amount: number) => {\n  const response = await axios.post(`${API_BASE_URL}/bet`, { event_id: eventId, choice, amount });\n  return response.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,SAAS,CAAC;EAC1D,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,WAAmB,IAAK;EACxD,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,SAAS,EAAE;IAAEM;EAAY,CAAC,CAAC;EAC5E,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAG,MAAAA,CAAOC,OAAe,EAAEC,MAAc,EAAEC,MAAc,KAAK;EACjF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,MAAM,EAAE;IAAEY,QAAQ,EAAEH,OAAO;IAAEC,MAAM;IAAEC;EAAO,CAAC,CAAC;EAC/F,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}